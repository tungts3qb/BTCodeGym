--- Đối tượng trong JavaScript
	- let person = {}
	- như 1 api

- dấu [] : truy xuất thuộc tính của đối tượng doituong["thuoctinh"]
	   tạo ra một trường mới cho đối tượng doituong['name'] = value

- this : + tham chiếu đến đối tượng hiện hành
         + hữu ích khi tạo hàm constructor cho đối tượng

--- Đối tượng Date
   khai báo : var d = new Date();
   * các phương thức của đối tượng Date
	+ getDate(): Trả về ngày trong tháng (từ 1-31)
	+ getDay(): Trả về ngày trong tuần (từ 0-6)
 	+ getFullYear(): Trả về năm
	+ getHours(): Trả về giờ (từ 0-23)
	+ getMinutes(): Trả về phút (từ 0-59)
	+ getSeconds(): Trả về giây (từ 0-59)
	+ getMilliseconds(): Trả về phần nghìn giây (từ 0-999)
	+ getTime(): Trả về tổng số milliseconds (tính từ nửa đêm 1/1/1970)

---- Cách khởi tạo một đối tượng mới trong Js có hàm constructor
class Circle {
  constructor(radius, color) {
    this.radius = radius;
    this.color = color;
  }
  getRadius() {
    return this.radius;
  }
  getArea() {
    return Math.PI * this.radius * this.radius;
  }
}

	
--- Đối tượng Math
   có thể sử dụng luôn mà không cần khai báo
	+ abs(x): Trả về giá trị tuyệt đối của x
	+ ceil(x): Trả về số trần của x (lấy số nguyên nhỏ nhất lớn hơn x)
	+ floor(x): Trả về số sàn của x (lấy số nguyên lớn nhất nhỏ hơn x)
	+ max(x, y, z…, n): Trả về số lớn nhất trong danh sách các tham số
	+ min(x, y, z…, n): Trả về số nhỏ nhất trong danh sách các tham số
	+ pow(x, y): Trả về giá trị x luỹ thừa y (xy)
	+ random(): Trả về một số ngẫu nhiên nằm trong khoảng từ 0 đến 1
	+ round(x): Làm tròn x

--- Đối tượng String
	+ charAt(): Trả về ký tự tại một vị trí được chỉ định
	+ concat(): Nối hai hoặc nhiều chuỗi để tạo thành một chuỗi mới
	+ endsWith(): Kiểm tra xem liệu một chuỗi có kết thúc giống với một chuỗi khác hay không
	+ startsWith(): Kiểm tra xem liệu một chuỗi có kết thúc giống với một chuỗi khác hay không
	+ indexOf(): Trả về vị trí của một chuỗi ở trong một chuỗi khác. Nếu chuỗi này xuất hiện nhiều lần thì lấy vị trí của lần xuất hiện đầu tiên.
	+ lastIndexOf(): Trả về vị trí của lần xuất hiện cuối cùng một chuỗi ở trong một chuỗi khác.
	+ replace(): Thay thế một chuỗi bằng một chuỗi khác.
	+ split(): Tách một chuỗi thành một mảng các chuỗi
	+ substr(): Lấy một phần nhỏ của chuỗi
	+ toLowerCase(): Chuyển một chuỗi thành viết thường
	+ toUpperCase(): Chuyển một chuỗi thành viết hoa
	+ trim(): Loại bỏ các dấu khoảng trắng ở hai đầu của chuỗi.
